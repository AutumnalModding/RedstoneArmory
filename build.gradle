buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

plugins {
  id 'com.matthewprenger.cursegradle' version '1.0.1'
}

apply plugin: 'forge'
apply plugin: 'maven-publish'

def build_number = 'CUSTOM'

if (System.getenv('BUILD_NUMBER') != null)
    build_number = System.getenv('BUILD_NUMBER')

group = package_group
archivesBaseName = mod_name
version = "${mc_version}-${mod_version}-${build_number}"

import org.ajoberstar.grgit.Grgit

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

repositories {
    maven { url 'http://maven.tterrag.com/' }
    maven { url = "http://chickenbones.net/maven/" }
	ivy {
		name "CoFHCore"
        artifactPattern "http://addons-origin.cursecdn.com/files/2235/399/[module]-[revision].[ext]"
    }
	ivy {
		name "RedstoneArsenal"
        artifactPattern "http://addons-origin.cursecdn.com/files/2234/469/[module]-[revision].[ext]"
    }
	ivy {
		name "ThermalExpansion"
        artifactPattern "http://addons-origin.cursecdn.com/files/2233/797/[module]-[revision].[ext]"
    }
	ivy {
		name "ThermalFoundation"
        artifactPattern "http://addons-origin.cursecdn.com/files/2235/66/[module]-[revision].[ext]"
    }
	ivy {
		name "Baubles"
        artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-deobf-1.7.10-[revision].[ext]"
    }
}

dependencies {
    compile "com.enderio.core:EnderCore:${mc_version}-${endercore_version}:dev"
  	compile name: 'Baubles', version: "${baubles_version}", ext: 'jar'
  	compile name: 'CoFHCore', version: "[${mc_version}]${cofhcore_version}", ext: 'jar'
  	compile name: 'RedstoneArsenal', version: "[${mc_version}]${rars_version}", ext: 'jar'
  	compile name: 'ThermalExpansion', version: "[${mc_version}]${texpansion_version}", ext: 'jar'
  	compile name: 'ThermalFoundation', version: "[${mc_version}]${tfoundation_version}", ext: 'jar'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    replace "@VERSION@", project.version
    replaceIn "ModInformation.java"

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Git-Hash": gitHash
    )
}

// Source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// Javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// Deobfuscated jar
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            artifact deobfJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

def curseRelations = {
    requiredLibrary 'cofhcore'
    requiredLibrary 'thermal-foundation'
    requiredLibrary 'redstone-arsenal'
    requiredLibrary 'ttcore'
    requiredLibrary 'thermalexpansion'
}
 
curseforge {
    if (project.hasProperty('curse_key'))
        apiKey = project.curse_key
 
    project {
        id = "${curse_id}"
        changelog = project.hasProperty('changelog') ? project.changelog : ''
        releaseType = 'release'
 
        mainArtifact(jar) {
            displayName = "${mod_name} - ${mod_version}-${build_number}"
            relations curseRelations
        }
 
        addArtifact(deobfJar) {
            relations curseRelations
        }
 
        addArtifact sourceJar
        addArtifact javadocJar
    }
}